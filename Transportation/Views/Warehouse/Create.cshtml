@model DataAccess.Entity.Warehouse
@{
    ViewData["Title"] = "Create";

    <style>
        #map {
            width: 100%;
            height: 550px;
            position: relative;
            z-index: 1;
        }

        .list-container {
            margin-top: 20px;
        }
    </style>
}

<div class="container">
    <!-- Hàng chứa bản đồ và form -->
    <div class="row">
        <!-- Cột chứa bản đồ -->
        <div class="col-md-8">
            <div id="map"></div>
        </div>

        <!-- Cột chứa form thêm mới -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <div class="pt-4 pb-2">
                        <h5 class="card-title text-center pb-0 fs-4">Thêm mới kho</h5>
                   
                    </div>

                    <form id="Createwarehouse" class="row g-3 needs-validation" novalidate>
                        <div class="col-12">
                            <label asp-for="Address" class="form-label">Địa chỉ</label>
                            <input id="address" class="form-control" required>
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>

                        <div class="col-12">
                            <label asp-for="Name" class="form-label">Tên kho</label>
                            <input id="name"  class="form-control" required>
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="col-12">
                            <label asp-for="Capacity" class="form-label">Trọng tải xe cho phép</label>
                            <input id="capacity" class="form-control" required>
                            <span asp-validation-for="Capacity" class="text-danger"></span>
                        </div>

                  
                        <div class="row">
                            <div class="col-sm-6">
                                <label asp-for="OpeningTime" class="form-label">Giờ mở cửa</label>
                                <input id="openingTime" type="time" class="form-control" required>
                                <span asp-validation-for="OpeningTime" class="text-danger"></span>
                            </div>
                          <div class="col-sm-6">
                                <label asp-for="ClosingTime" class="form-label">Giờ đóng cửa</label>
                                <input id="closingTime" type="time" class="form-control" required>
                                <span asp-validation-for="ClosingTime" class="text-danger"></span>
                          </div>
                        </div>

                        <div class="col-12">
                          
                        </div>

                        <input type="hidden" id="Latitude" name="Latitude" />
                        <input type="hidden" id="Longitude" name="Longitude" />

                        <div class="col-12">
                            <button class="btn btn-primary w-100" type="submit">Thêm mới</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    
</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // 1️⃣ Lắng nghe sự kiện gửi form
            document.getElementById("Createwarehouse").addEventListener("submit", function (event) {
                event.preventDefault(); // Ngăn chặn reload trang

                let formData = {
                    Address: document.getElementById("address").value,
                    Name: document.getElementById("name").value,
                    Capacity: document.getElementById("capacity").value,
                    OpeningTime: document.getElementById("openingTime").value,
                    ClosingTime: document.getElementById("closingTime").value,
                    Latitude: document.getElementById("Latitude").value,
                    Longitude: document.getElementById("Longitude").value
                           
                };

                fetch("/api/WarehouseAPI/CreateWarehouse", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(formData),
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert("Thêm kho thành công!");
                            window.location.href = "/Warehouse/Index";
                        } else {
                            alert("Có lỗi xảy ra!");
                        }
                    })
                    .catch(error => console.error("Lỗi:", error));
            });

            // 2️⃣ Khởi tạo bản đồ OpenStreetMap
            var map = L.map("map").setView([21.028511, 105.804817], 13);
            L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
                attribution: '&copy; OpenStreetMap contributors'
            }).addTo(map);

            var marker;
            var addressInput = document.getElementById("address"); // ✅ Đảm bảo đúng ID
            var suggestionContainer = document.createElement("div");
            suggestionContainer.className = "suggestion-container";
            addressInput.parentNode.appendChild(suggestionContainer);

            // ✅ Hàm debounce để giảm số lần gọi API
            let debounceTimeout;
            function debounce(callback, delay) {
                clearTimeout(debounceTimeout);
                debounceTimeout = setTimeout(callback, delay);
            }

            addressInput.addEventListener("input", function () {
                var address = this.value.trim();
                if (!address) {
                    suggestionContainer.innerHTML = "";
                    return;
                }

                debounce(() => {
                    fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`)
                        .then(response => response.json())
                        .then(data => {
                            suggestionContainer.innerHTML = "";

                            if (data.length > 0) {
                                data.forEach(item => {
                                    var suggestionItem = document.createElement("div");
                                    suggestionItem.className = "suggestion-item";
                                    suggestionItem.textContent = item.display_name;

                                    suggestionItem.addEventListener("click", function () {
                                        addressInput.value = item.display_name;
                                        document.getElementById("Latitude").value = item.lat;
                                        document.getElementById("Longitude").value = item.lon;

                                        var latlng = [item.lat, item.lon];
                                        map.setView(latlng, 13);

                                        if (marker) map.removeLayer(marker);
                                        marker = L.marker(latlng).addTo(map).bindPopup(item.display_name).openPopup();

                                        suggestionContainer.innerHTML = ""; // Ẩn danh sách
                                    });

                                    suggestionContainer.appendChild(suggestionItem);
                                });
                            } else {
                                suggestionContainer.innerHTML = '<div class="suggestion-item">Không tìm thấy địa chỉ.</div>';
                            }
                        })
                        .catch(error => {
                            console.error("Lỗi API:", error);
                            suggestionContainer.innerHTML = '<div class="suggestion-item">Lỗi khi tìm kiếm địa chỉ!</div>';
                        });
                }, 500);
            });

            // ✅ Chỉ ẩn danh sách gợi ý nếu người dùng không chọn gì
            addressInput.addEventListener("blur", function () {
                setTimeout(() => {
                    if (!document.activeElement.classList.contains("suggestion-item")) {
                        suggestionContainer.innerHTML = "";
                    }
                }, 200);
            });
        });
    </script>

}

<style>
    .suggestion-container {
        position: absolute;
        background-color: white;
        border: 1px solid #ccc;
        width: 100%;
        max-height: 200px;
        overflow-y: auto;
        z-index: 1000;
    }

    .suggestion-item {
        padding: 8px;
        cursor: pointer;
    }

        .suggestion-item:hover {
            background-color: #f0f0f0;
        }
</style>


@* 
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Khởi tạo bản đồ
            var map = L.map('map').setView([21.028511, 105.804817], 13);

            // Thêm lớp gạch từ OpenStreetMap
            L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // Thêm marker hiện tại (nếu cần)
            var marker;

            // Lắng nghe sự kiện nhập địa chỉ
            document.getElementById('Address').addEventListener('blur', function () {
                var address = this.value;

                if (address) {
                    // Gọi Geocoding API để tìm kiếm địa chỉ
                    fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`)
                        .then(response => response.json())
                        .then(data => {
                            if (data.length > 0) {
                                var latlng = [data[0].lat, data[0].lon];
                                var displayName = data[0].display_name;

                                // Cập nhật bản đồ và marker
                                map.setView(latlng, 13);

                                if (marker) {
                                    map.removeLayer(marker);
                                }

                                marker = L.marker(latlng).addTo(map).bindPopup(displayName).openPopup();

                                // Cập nhật form
                                document.getElementById('Latitude').value = latlng[0];
                                document.getElementById('Longitude').value = latlng[1];

                                // **Cập nhật địa chỉ tìm kiếm được vào trường Address**
                                document.getElementById('Address').value = displayName;
                            } else {
                                alert('Không tìm thấy địa chỉ này.');
                            }
                        })
                        .catch(error => {
                            console.error('Lỗi khi gọi Geocoding API:', error);
                        });
                }
            });
            // Gọi AJAX để lấy danh sách kho
            function loadWarehouseList() {
                $.ajax({
                    url: '/Warehouse/GetWarehouseListPartial',
                    method: 'GET',
                    success: function (partialView) {
                        $("#warehouseListContainer").html(partialView);
                    },
                    error: function () {
                        alert("Không thể tải danh sách kho.");
                    }
                });
            }

            // Load danh sách lần đầu
            loadWarehouseList();
        });
     


    </script>
}
 *@