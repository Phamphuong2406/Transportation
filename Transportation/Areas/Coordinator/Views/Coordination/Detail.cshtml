

@{
    ViewData["Title"] = "Detail";
    Layout = "~/Areas/Coordinator/Views/Shared/_LayoutCoordinator.cshtml";
   
}


 @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div>
    <h5 class="card-title">Đường đi dự kiến</h5>

    <!-- Bảng thông tin điều phối -->

    <table class="table table-striped">
        <thead>
            <tr>
                
                <th scope="col">Điểm lấy hàng</th>
                <th scope="col">Điểm trả hàng</th>
    
            </tr>
        </thead>
        <tbody>
            <tr>
                <td id="pickupLocation">Đang tải...</td>
                <td id="dropoffLocation">Đang tải...</td>
               @*  <td>
                    <a asp-area="Coordinator" asp-controller="Journey" class="btn btn-warning btn-sm" asp-action="Realtime" asp-route-Id="@Model.TruckId">Theo dõi</a>
                </td> *@

            </tr>
        </tbody>
    </table>
</div>

<!-- Phần bản đồ -->
<div id="map" style="height: 700px;"></div>

@section Scripts {
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-routing-machine@3.2.0/dist/leaflet-routing-machine.js"></script>

<script>
    const requestId = @ViewBag.RequestId; // Hoặc truyền từ route/query

    fetch(`/api/ShippingRequestAPI/GetRoute?id=${requestId}`)
        .then(res => {
            if (!res.ok) throw new Error("Không thể lấy dữ liệu API.");
            return res.json();
        })
        .then(data => {
            console.log(data);
            // Cập nhật UI
            document.getElementById("pickupLocation").textContent = data.PickupLocation;
            document.getElementById("dropoffLocation").textContent = data.DropoffLocation;

            // Vẽ bản đồ
            const map = L.map('map').setView([data.PickupLat, data.PickupLng], 13);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; OpenStreetMap contributors'
            }).addTo(map);

            const truckIcon = L.icon({
                iconUrl: '/img/truck.png',
                iconSize: [70, 70]
            });

            L.marker([data.PickupLat, data.PickupLng], { icon: truckIcon }).addTo(map).bindPopup("Điểm lấy hàng");
            L.marker([data.DropoffLat, data.DropoffLng]).addTo(map).bindPopup("Điểm giao hàng");

            map.fitBounds([
                [data.PickupLat, data.PickupLng],
                [data.DropoffLat, data.DropoffLng]
            ]);

            L.Routing.control({
                waypoints: [
                    L.latLng(data.PickupLat, data.PickupLng),
                    L.latLng(data.DropoffLat, data.DropoffLng)
                ],
                routeWhileDragging: false,
                draggableWaypoints: false,
                addWaypoints: false,
                lineOptions: {
                    styles: [{ color: 'blue', weight: 4 }]
                }
            }).addTo(map);
        })
        .catch(err => {
            console.error(err);
            alert("Không thể tải thông tin hành trình.");
        });
</script>
}


