 @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "biểu đồ tỉ lệ đơn hàng giao trễ";
    Layout = "~/Areas/Coordinator/Views/Shared/_LayoutCoordinator.cshtml";
}

<section class="section">
    <label for="monthSelect">Chọn tháng:</label>
    <select id="monthSelect">
        <option value="1">Tháng 1</option>
        <option value="2">Tháng 2</option>
        <option value="3">Tháng 3</option>
        <option value="4">Tháng 4</option>
        <option value="5">Tháng 5</option>
        <option value="6">Tháng 6</option>
        <option value="7">Tháng 7</option>
        <option value="8">Tháng 8</option>
        <option value="9">Tháng 9</option>
        <option value="10">Tháng 10</option>
        <option value="11">Tháng 11</option>
        <option value="12">Tháng 12</option>
    </select>
    <div class="row">
        @* Thống kê đơn hàng của xe  *@
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <canvas width="800" height="400" id="orderChart"></canvas>
                    <h6>Thống kê tổng số đơn hàng của xe tải đã thực hiện</h6>

                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">

                    <canvas id="driverPerformanceChart" width="800" height="400"></canvas>
                    <h6> Biểu đồ hiệu suất tài xế</h6>
                </div>
            </div>
        </div>
        @*   tỉ lệ giao trễ *@
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <canvas id="lateDeliveryChart" width="800" height="400"></canvas>
                    <h6> Tỷ lệ đơn hàng giao trễ</h6>
                </div>
            </div>
        </div>

        @* Trạng thái đơn hàng *@
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">

                    <canvas id="orderStatusChart" width="800" height="400"></canvas>
                    <h6> Biểu đồ trạng thái đơn hàng</h6>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">

                    <label for="daySelect">Chọn ngày:</label>
                    <select id="daySelect">
                        <option value="0">Toàn tháng</option>
                    </select>
                    <canvas id="truckLoadChart" width="800" height="400"></canvas>
                    <h6> Biểu đồ phân bổ trọng tải </h6>
                </div>
            </div>
        </div>

    </div>
</section>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const year = new Date().getFullYear();
            const currentMonth = new Date().getMonth() + 1;
            const monthSelect = document.getElementById('monthSelect');
            if (monthSelect) monthSelect.value = currentMonth;

            let orderChart, orderStatusChart, lateDeliveryChart, driverPerformanceChart;

            // ===== BIỂU ĐỒ 1: SỐ ĐƠN HÀNG CỦA XE =====
            function loadOrderChart(month) {
                fetch(`/api/ChartAPI/TruckOrderStatistics?year=${year}&month=${month}`)
                    .then(response => {
                        if (!response.ok) throw new Error('Lỗi API: ' + response.status);
                        return response.json();
                    })
                    .then(data => {
                        const truckId = data.map(truck => truck.truckId);
                        const totalOrders = data.map(truck => truck.totalOrders);
                        const ctx = document.getElementById('orderChart').getContext('2d');

                        if (orderChart) {
                            orderChart.data.labels = truckId;
                            orderChart.data.datasets[0].data = totalOrders;
                            orderChart.update();
                        } else {
                            orderChart = new Chart(ctx, {
                                type: 'bar',
                                data: {
                                    labels: truckId,
                                    datasets: [{
                                        label: 'Số đơn hàng',
                                        data: totalOrders,
                                        backgroundColor: '#36a2eb',
                                        borderColor: '#1e88e5',
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    responsive: true,
                                    scales: {
                                        y: { beginAtZero: true }
                                    },
                                    plugins: {
                                        legend: { display: false }
                                    }
                                }
                            });
                        }
                    })
                    .catch(err => {
                        console.error("Lỗi khi tải biểu đồ đơn hàng:", err);
                        alert("Không thể tải biểu đồ đơn hàng.");
                    });
            }

            // ===== BIỂU ĐỒ 2: TRẠNG THÁI ĐƠN HÀNG =====
            function loadOrderStatusChart(month) {
                fetch(`/api/ChartAPI/OrderStatusStatistics?year=${year}&month=${month}`)
                    .then(response => {
                        if (!response.ok) throw new Error('Lỗi API: ' + response.status);
                        return response.json();
                    })
                    .then(data => {
                        const counts = data.map(order => order.count);
                        const statuses = data.map(order => `${order.status} (${order.count})`);
                        const baseColors = ['#36a2eb', '#ff6384', '#ffcd56', '#4bc0c0', '#9966ff'];
                        const colors = statuses.map((_, i) => baseColors[i % baseColors.length]);
                        const ctx = document.getElementById('orderStatusChart').getContext('2d');

                        if (orderStatusChart) orderStatusChart.destroy();

                        orderStatusChart = new Chart(ctx, {
                            type: 'polarArea',
                            data: {
                                labels: statuses,
                                datasets: [{
                                    label: 'Số lượng đơn hàng',
                                    data: counts,
                                    backgroundColor: colors
                                }]
                            },
                            options: {
                                responsive: true,
                                plugins: {
                                    legend: { position: 'top' }
                                }
                            }
                        });
                    })
                    .catch(err => {
                        console.error("Lỗi khi tải biểu đồ trạng thái:", err);
                        alert("Không thể tải biểu đồ trạng thái đơn hàng.");
                    });
            }

            // ===== BIỂU ĐỒ 3: TỶ LỆ GIAO TRỄ =====
            function loadLateDeliveryChart(month) {
                fetch(`/api/ChartAPI/GetLateDeliveryData?year=${year}&month=${month}`)
                    .then(response => {
                        if (!response.ok) throw new Error('Lỗi API: ' + response.status);
                        return response.json();
                    })
                    .then(data => {
                        const ctx = document.getElementById('lateDeliveryChart').getContext('2d');

                        if (lateDeliveryChart) lateDeliveryChart.destroy();

                        lateDeliveryChart = new Chart(ctx, {
                            type: 'pie',
                            data: {
                                labels: ["Đúng hạn", "Giao trễ"],
                                datasets: [{
                                    data: [data.onTime, data.late],
                                    backgroundColor: ["#4CAF50", "#FF5733"]
                                }]
                            },
                            options: {
                                responsive: true,
                                plugins: {
                                    legend: { position: 'bottom' }
                                }
                            }
                        });
                    })
                    .catch(err => {
                        console.error("Lỗi khi tải biểu đồ giao trễ:", err);
                        alert("Không thể tải biểu đồ giao trễ.");
                    });
            }

            // ===== BIỂU ĐỒ 4: HIỆU SUẤT TÀI XẾ =====
            function loadDriverPerformanceChart(month) {
                fetch(`/api/ChartAPI/DriverPerformanceData?year=${year}&month=${month}`)
                    .then(response => {
                        if (!response.ok) throw new Error('Lỗi API: ' + response.status);
                        return response.json();
                    })
                    .then(data => {
                        const ctx = document.getElementById('driverPerformanceChart').getContext('2d');

                        if (driverPerformanceChart) driverPerformanceChart.destroy();

                        driverPerformanceChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: data.map(d => d.driverName),
                                datasets: [
                                    {
                                        label: 'Số chuyến đã hoàn thành',
                                        data: data.map(d => d.totalTrips ?? 0),
                                        backgroundColor: 'rgba(75, 192, 192, 0.6)',
                                    },
                                    {
                                        label: 'Số đơn hàng đã giao',
                                        data: data.map(d => d.totalOrders ?? 0),
                                        backgroundColor: 'rgba(255, 159, 64, 0.6)',
                                    },
                                    {
                                        label: 'Tỷ lệ giao đúng hạn (%)',
                                        data: data.map(d => d.onTimeRate ?? 0),
                                        backgroundColor: 'rgba(153, 102, 255, 0.6)',
                                    }
                                ]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    y: { beginAtZero: true }
                                }
                            }
                        });
                    })
                    .catch(err => {
                        console.error("Lỗi khi tải biểu đồ hiệu suất tài xế:", err);
                        alert("Không thể tải biểu đồ hiệu suất tài xế.");
                    });
            }

            // Gọi tất cả biểu đồ
            function loadAllCharts(month) {
                loadOrderChart(month);
                loadOrderStatusChart(month);
                loadLateDeliveryChart(month);
                loadDriverPerformanceChart(month);
            }

            // Sự kiện chọn tháng
            monthSelect.addEventListener('change', function () {
                const selectedMonth = this.value;
                loadAllCharts(selectedMonth);
            });

            // Load mặc định
            loadAllCharts(currentMonth);
        });
    </script>
}




<!-- Button to trigger modal -->
@*  2 *@
@* <script>
    document.addEventListener("DOMContentLoaded", function () {
        const ctx = document.getElementById('truckLoadChart').getContext('2d');
        let truckChart = null;
        const year = new Date().getFullYear();
        function updateDays(month) {
            const daySelect = document.getElementById('daySelect');
            daySelect.innerHTML = '<option value="0">Toàn tháng</option>'; // Reset về "Toàn tháng"

            // Lấy số ngày trong tháng
            const daysInMonth = new Date(year, month, 0).getDate();
            for (let day = 1; day <= daysInMonth; day++) {
                daySelect.innerHTML += `<option value="${day}">${day}</option>`;
            }
        }
        function loadChart(month, day) {
            fetch(`/api/ChartAPI/TruckLoadDistribution?year=${year}&month=${month}&day=${day}`)
                .then(response => response.json())
                .then(data => {
                    console.log('Truck Load Data:', data);

                    const truckId = data.map(truck => truck.truckId);
                    const usedLoads = data.map(truck => truck.usedLoad);
                    const maxLoads = data.map(truck => truck.maxLoad);
                    const remainingLoads = maxLoads.map((max, index) => max - usedLoads[index]);

                    // Hủy biểu đồ cũ trước khi vẽ mới
                    if (truckChart) {
                        truckChart.destroy();
                    }

                    truckChart = new Chart(ctx, {
                        type: 'doughnut',
                        data: {
                            labels: truckId,
                            datasets: [
                                {
                                    label: 'Tải trọng đã sử dụng',
                                    data: usedLoads,
                                    backgroundColor: '#ff6384',
                                },
                                {
                                    label: 'Tải trọng còn lại',
                                    data: remainingLoads,
                                    backgroundColor: '#36a2eb',
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'top',
                                }
                            }
                        }
                    });
                })
                .catch(error => console.error('Lỗi khi lấy dữ liệu:', error));
        }

        document.getElementById('monthSelect').addEventListener('change', function () {
            const selectedMonth = this.value;
            updateDays(selectedMonth);
            loadChart(selectedMonth, 0);
        });

        document.getElementById('daySelect').addEventListener('change', function () {
            const selectedMonth = document.getElementById('monthSelect').value;
            const selectedDay = this.value;
            loadChart(selectedMonth, selectedDay);
        });

        const currentMonth = new Date().getMonth() + 1;
        updateDays(currentMonth);
        loadChart(currentMonth, 0);
    });

</script>
 *@