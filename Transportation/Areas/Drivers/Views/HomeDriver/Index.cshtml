@model IEnumerable<Transportation.Infrastructure.Data.DispatchAssignment>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Drivers/Views/Shared/_LayoutDriver.cshtml";
}
 @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


<div>
    <h5 class="card-title">đơn hàng vận chuyển</h5>

    <!-- Table with stripped rows -->

    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Mã </th>
                <th scope="col">Địa chỉ nhận</th>
                <th scope="col">Địa chỉ giao</th>
                <th scope="col">Trọng tải</th>
                <th scope="col">Đơn giá</th>
                <th scope="col">Khách hàng</th>
                <th scope="col">lựa chọn</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <th scope="row" class="request-id">@item.RequestId</th>
                    <td>@item.PickupLocation</td>
                    <td>@item.DropoffLocation</td>
                    <td>@item.Weight</td>
                    <td>@item.ShippingCost</td>
                    <td>@item.Request.Customer.FullName</td>
                    <td>

                            <a asp-area="Drivers" asp-controller="HomeDriver" class="btn btn-warning btn-sm" asp-action="Detail" asp-route-Id="@item.AssignmentId">Xem đường</a>
                        @if (item.Status == "Đã giao hàng")
                        {
                            <!-- Nếu đã giao hàng, hiển thị trạng thái -->
                            <h6 class="text-success">Đã giao hàng</h6>
                        }
                        else
                        {
                            <!-- Button to trigger modal -->
                            <button type="button" class="btn btn-info" data-bs-toggle="modal"
                            data-bs-target="#createDispatcherModal"
                            onclick="setRequestId('@item.RequestId')">
                                Xác nhận
                            </button>
                        }
                    </td>

                </tr>
            }


        </tbody>
    </table>
</div>

<!-- Modal for confirmation -->
<div class="modal fade" id="createDispatcherModal" tabindex="-1" aria-labelledby="createDispatcherModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createDispatcherModalLabel">Xác nhận đơn hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="UploadImgAndStatus" asp-controller="HomeDriver" asp-area="Drivers" method="post" enctype="multipart/form-data" id="createDispatcherForm">
                <div class="modal-body">
                    <!-- Hidden input to store AssignmentId -->
                    <input type="hidden" id="requestId" name="RequestId">

                    <div class="form-group mb-3">
                        <label for="ImageUpload" class="form-label">Tải ảnh xác nhận</label>
                        <input type="file" class="form-control" id="ImageUpload" name="ImageUpload" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-primary" onclick="submitForm(this)">Xác nhận đơn hàng</button>
                </div>
            </form>
        </div>
    </div>
</div>

 @section Scripts {
    <script>
        function setRequestId(requestId) {
            document.getElementById('requestId').value = requestId;
        }

        function submitForm(button) {
            const form = document.getElementById('createDispatcherForm');
            const formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData,
            })
                .then(async (response) => {
                    const result = await response.json();
                    if (response.ok) {
                        // Thành công
                        alert("Đã xác nhận giao hàng thành công!");

                        location.reload(); // Load lại trang nếu cần

                    } else if (response.status === 400) {
                        // Lỗi dữ liệu không hợp lệ
                        alert(result.message || "Dữ liệu không hợp lệ. Vui lòng kiểm tra lại.");
                    } else {
                        // Lỗi khác
                        alert("Đã xảy ra lỗi: " + (result.message || "Không xác định."));
                    }
                })
                .catch((error) => {
                    console.error("Error:", error);
                    alert("Không thể gửi yêu cầu. Vui lòng thử lại.");
                });
        }
    </script>

 }
@* @section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Lắng nghe sự kiện click cho tất cả nút "Xác nhận đã giao"
            document.querySelectorAll('.btn-primary').forEach(function (button) {
                button.addEventListener('click', function () {
                    // Tìm hàng hiện tại (tr) chứa nút được nhấn
                    const currentRow = button.closest('tr');
                    if (!currentRow) {
                        console.error("Không tìm thấy hàng chứa nút.");
                        return;
                    }

                    // Lấy RequestId từ cột tương ứng
                    const requestIdCell = currentRow.querySelector('.request-id');
                    if (!requestIdCell) {
                        console.error("Không tìm thấy cột chứa RequestId.");
                        return;
                    }
                    const requestId = parseInt(requestIdCell.textContent.trim());

                    // Gửi AJAX đến endpoint
                    $.ajax({
                        url: '/Drivers/HomeDriver/UpdateStatus',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ requestId: requestId }),
                        success: function (response) {
                            alert(response.message);

                            // Thay đổi nút thành thẻ <h> với nội dung "Đã giao"
                            const parentCell = button.parentElement;
                            parentCell.innerHTML = '<h6 class="text-success">Đã giao</h6>';
                        },
                        error: function (xhr) {
                            alert('Có lỗi xảy ra: ' + xhr.responseJSON?.message || 'Không thể cập nhật trạng thái.');
                        }
                    });
                });
            });
        });
    </script>
}
 *@
