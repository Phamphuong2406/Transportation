@model DataAccess.Entity.RealTimeTracking

@{
    ViewData["Title"] = "Realtime Tracking";
    Layout = "~/Areas/Drivers/Views/Shared/_LayoutDriver.cshtml";
}



<!-- Vùng hiển thị thông tin tọa độ -->
<div>
    <h3>Vị trí hiện tại</h3>
    <p><strong>Latitude:</strong> <span id="latitude">Đang cập nhật...</span></p>
    <p><strong>Longitude:</strong> <span id="longitude">Đang cập nhật...</span></p>
</div>

<!-- Bản đồ -->
<div id="map" style="height: 500px; width: 100%; margin-top: 20px;"></div>


@section Scripts {
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

    <script>
    
        const truckId = '@ViewBag.truckId' ? parseInt('@ViewBag.truckId') : 1; // Set giá trị mặc định nếu null


        var map = L.map('map').setView([10.762622, 106.660172], 13);

        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        var truckIcon = L.icon({
            iconUrl: '/img/truck.png',
            iconSize: [50, 50]
        });

        let marker, circle;

        function updateLocationOnMap(lat, lng, accuracy) {
            document.getElementById('latitude').textContent = lat.toFixed(6);
            document.getElementById('longitude').textContent = lng.toFixed(6);

            if (marker) {
                map.removeLayer(marker);
                map.removeLayer(circle);
            }

            marker = L.marker([lat, lng], { icon: truckIcon }).addTo(map)
                .bindPopup(`🚛 Truck ID: ${truckId}<br>📍 Lat: ${lat}<br>📍 Lng: ${lng}`)
                .openPopup();

            circle = L.circle([lat, lng], { radius: accuracy }).addTo(map);
            map.fitBounds(circle.getBounds());
        }

        function success(pos) {
            const lat = pos.coords.latitude;
            const lng = pos.coords.longitude;
            const accuracy = pos.coords.accuracy;

            updateLocationOnMap(lat, lng, accuracy);
            sendLocationToHub(lat, lng);
        }

        function error(err) {
            if (err.code === 1) {
                alert("Vui lòng cấp quyền truy cập vị trí.");
            } else {
                alert("Không thể lấy vị trí hiện tại.");
            }
        }

        navigator.geolocation.watchPosition(success, error);

        // Kết nối với SignalR Hub
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/locationHub")
            .configureLogging(signalR.LogLevel.Information) // Ghi log thông tin quan trọng
            .build();

        connection.on("ReceiveLocation", function (receivedTruckId, lat, lng) {
            if (receivedTruckId === truckId) {
                updateLocationOnMap(lat, lng, 0);
            }
        });

        connection.start().catch(err => console.error("Lỗi kết nối SignalR:", err));

        function sendLocationToHub(latitude, longitude) {
            console.log("Gửi tọa độ:", truckId, latitude, longitude);

            connection.invoke("SendLocationUpdate",truckId, 20.970475823374986, 105.79439013678694)
                .then(() => console.log("Gửi thành công"))
                .catch(err => console.error("Lỗi khi gửi:", err));
        }
    </script>
}



